// <auto-generated />
using Functions.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Functions.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Functions.Models.BuildingConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("Azimuth")
                        .HasColumnType("real");

                    b.Property<decimal>("BatteryCapacity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CommunalDayPower")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CommunalNightPower")
                        .HasColumnType("numeric");

                    b.Property<int>("EnergyPricesId")
                        .HasColumnType("integer");

                    b.Property<int>("FlatCount")
                        .HasColumnType("integer");

                    b.Property<float>("FlatMaxPower")
                        .HasColumnType("real");

                    b.Property<float>("GridConnectionPower")
                        .HasColumnType("real");

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.Property<float>("MountAngle")
                        .HasColumnType("real");

                    b.Property<float>("PvMaximumPower")
                        .HasColumnType("real");

                    b.Property<decimal>("WindTurbineMaxPower")
                        .HasColumnType("numeric");

                    b.Property<decimal>("WindTurbineMaxPowerSpeed")
                        .HasColumnType("numeric");

                    b.Property<decimal>("WindTurbineMinPower")
                        .HasColumnType("numeric");

                    b.Property<decimal>("WindTurbineMinPowerSpeed")
                        .HasColumnType("numeric");

                    b.Property<decimal>("WindTurbineTypicalPower")
                        .HasColumnType("numeric");

                    b.Property<decimal>("WindTurbineTypicalPowerSpeed")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("BuildingsConfigurations");
                });
#pragma warning restore 612, 618
        }
    }
}
